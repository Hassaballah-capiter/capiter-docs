openapi: 3.0.0
servers:
  - url: '35.242.242.45'
info:
  version: "1.0_oas3"
  title: Capiter-Backend
  description: '# These are 35.242.242.45 backend Webservice Endpoints'
  contact:
    name: Mohamed Hassaballah
tags:
  - name: Root
  - name: Authentication
  - name: Users
  - name: Companies

paths:


  ##############################              Authentication Apis                 ################

  /capiter/api/v1/auth/{mobileNo}/password-status:
    get:
      tags:
        - Authentication
      description: Get user password setting status
      operationId: userPassStatus
      parameters:
        - $ref: "#/components/parameters/mobileNoPathParam"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordSettingResponseDto'

#        '400':
#          $ref: '#/components/responses/errorResponse'
#        '500':
#          $ref: '#/components/responses/errorResponse'

  /capiter/api/v1/auth/set-password:
    post:
      tags:
        - Authentication
      description: Set user password
      operationId: setUserPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingUserPasswordRequest'
      responses:
        '200':
          description: OK

  /capiter/api/v1/auth/app-login:
    post:
      tags:
        - Authentication
      description: Login for the mobile app
      operationId: appLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /capiter/api/v1/auth/dashboard-login:
    post:
      tags:
        - Authentication
      description: Login for the dashboard app
      operationId: dashboardLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  ##############################              Users Apis                 ################

  /capiter/api/v1/users/{id}/deactivate:
    post:
      tags:
        - Users
      description: deactivate user
      operationId: deactivateUser
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        '200':
          description: OK

  /capiter/api/v1/users/{companyId}:
    get:  
      tags:
        - Users
      description: List specific company's users
      operationId: listCompanyUsers
      parameters:
        - in: path
          name: companyId
          $ref: "#/components/parameters/companyIdPathParam"
        - in: header
          name: Authorization
          schema:
            $ref: '#/components/securitySchemes/bearerAuth'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListingResponse'
        # '401':
        #   content:
        #     application/json:
        #       schema:
        #         $ref: '#/components/schemas/UnauthorizedAccess'


####################################        Components         #########################################

components:

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
  
  schemas:
    PasswordSettingResponseDto:
      type: object
      properties:
        isPasswordSet:
          type: boolean
          example: false
      required:
        - isPasswordSet

    SettingUserPasswordRequest:
      type: object
      properties:
        mobileNo:
          type: string
          example: testCode
        password:
          type: string
          example: testText
      required:
        - mobileNo
        - password

    LoginRequest:
      type: object
      properties:
        mobileOrEmail: 
          type: string
        password: 
          type: string
      required: 
        - mobileOrEmail
        - passowrd
    
    LoginResponse:
      type: object
      properties:
        id:
          type: number
        authToken: 
          type: string
        verified: 
          type: boolean
        name:
          type: string
        mobileNo:
          type: string
      required:
        - mobileOrEmail
        - passowrd

    UsersListingResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'

    UserResponse:
      type: object
      properties:
        id: 
          type: integer
        mobileNo:
          type: string
        name:
          type: string
        email:
          type: string
        upcomingInstallmentAmount:
          type: integer
        upcomingInstallmentDate:
          type: string
          format: date
          pattern: "YYYY-MM-DD"
        verified:
          type: boolean
        creationDate:
          type: string
          format: date-time



  parameters:
    idPathParam:
      in: path
      name: id
      required: true
      schema:
        type: integer
        format: int64
      description: id in path param

    mobileNoPathParam:
      in: path
      name: mobileNo
      required: true
      schema:
        type: string
      description: Customer Mobile No.

    companyIdPathParam:
      in: path
      name: companyId
      required: true
      schema:
        type: number
      description: company id.

